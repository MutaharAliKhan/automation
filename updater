import os
import pandas as pd

def update_multiple_columns_in_csv(directory, updates):
    """
    Updates specified columns in all CSV files in the given directory and its subdirectories
    by replacing all existing values with the new values provided, but only if the column exists.

    :param directory: Path to the directory containing the CSV files.
    :param updates: A dictionary where the keys are column names and the values are the new values to set.
    """
    # Traverse the directory and subdirectories
    for subdir, _, files in os.walk(directory):
        for file in files:
            if file.endswith('.csv'):
                file_path = os.path.join(subdir, file)
                
                # Read the CSV file
                df = pd.read_csv(file_path)
                
                # Track if any columns were updated
                columns_updated = []
                
                # Update specified columns if they exist in the dataframe
                for column_name, new_value in updates.items():
                    if column_name in df.columns:
                        df[column_name] = new_value
                        columns_updated.append(column_name)
                
                # If any columns were updated, save the changes
                if columns_updated:
                    df.to_csv(file_path, index=False)
                    print(f"Updated columns {columns_updated} in file: {file_path}")

# Example usage:
directory_path = '/path/to/your/directory'
updates = {
    'username': 'testing2',
    'email': 'new_email@example.com',
    'status': 'active'
}

update_multiple_columns_in_csv(directory_path, updates)